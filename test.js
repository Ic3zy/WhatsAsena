`PS C:\Users\abdullah\Desktop\newrepo> node index
{
  type: 'md',
  ws: WebSocketClient {
    _events: [Object: null prototype] {
      message: [Function: onMessageReceived],
      open: [AsyncFunction (anonymous)],
      error: [Function (anonymous)],
      close: [Function (anonymous)],
      'CB:xmlstreamend': [Function (anonymous)],
      'CB:iq,type:set,pair-device': [AsyncFunction (anonymous)],
      'CB:iq,,pair-success': [AsyncFunction (anonymous)],
      'CB:success': [AsyncFunction (anonymous)],
      'CB:stream:error': [Function (anonymous)],
      'CB:failure': [Function (anonymous)],
      'CB:ib,,downgrade_webclient': [Function (anonymous)],
      'CB:ib,,edge_routing': [Function (anonymous)],
      'CB:ib,,offline': [Function (anonymous)],
      'CB:presence': [Function: handlePresenceUpdate],
      'CB:chatstate': [Function: handlePresenceUpdate],
      'CB:ib,,dirty': [Array],
      'CB:message': [Function (anonymous)],
      'CB:call': [AsyncFunction (anonymous)],
      'CB:receipt': [Function (anonymous)],
      'CB:notification': [AsyncFunction (anonymous)],
      'CB:ack,class:message': [Function (anonymous)]
    },
    _eventsCount: 21,
    _maxListeners: 0,
    url: URL {
      href: 'wss://web.whatsapp.com/ws/chat',
      origin: 'wss://web.whatsapp.com',
      protocol: 'wss:',
      username: '',
      password: '',
      host: 'web.whatsapp.com',
      hostname: 'web.whatsapp.com',
      port: '',
      pathname: '/ws/chat',
      search: '',
      searchParams: URLSearchParams {},
      hash: ''
    },
    config: {
      version: [Array],
      browser: [Array],
      waWebSocketUrl: 'wss://web.whatsapp.com/ws/chat',
      connectTimeoutMs: 20000,
      keepAliveIntervalMs: 30000,
      logger: [EventEmitter],
      printQRInTerminal: true,
      emitOwnEvents: true,
      defaultQueryTimeoutMs: 60000,
      customUploadHosts: [],
      retryRequestDelayMs: 250,
      maxMsgRetryCount: 5,
      fireInitQueries: true,
      auth: [Object],
      markOnlineOnConnect: false,
      syncFullHistory: false,
      patchMessageBeforeSending: [Function: patchMessageBeforeSending],
      shouldSyncHistoryMessage: [Function: shouldSyncHistoryMessage],
      shouldIgnoreJid: [Function: shouldIgnoreJid],
      linkPreviewImageThumbnailWidth: 192,
      transactionOpts: [Object],
      generateHighQualityLinkPreview: false,
      options: {},
      appStateMacVerification: [Object],
      getMessage: [AsyncFunction: getMessage],
      cachedGroupMetadata: [AsyncFunction: cachedGroupMetadata],
      makeSignalRepository: [Function: makeLibSignalRepository],
      mobile: false,
      placeholderResendCache: [NodeCache]
    },
    socket: WebSocket {
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: 0,
      _binaryType: 'nodebuffer',
      _closeCode: 1006,
      _closeFrameReceived: false,
      _closeFrameSent: false,
      _closeMessage: <Buffer >,
      _closeTimer: null,
      _errorEmitted: false,
      _extensions: {},
      _paused: false,
      _protocol: '',
      _readyState: 0,
      _receiver: null,
      _sender: null,
      _socket: null,
      _bufferedAmount: 0,
      _isServer: false,
      _redirects: 0,
      _autoPong: true,
      _url: 'wss://web.whatsapp.com/ws/chat',
      _req: [ClientRequest],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  ev: {
    process: [Function: process],
    emit: [Function: emit],
    isBuffering: [Function: isBuffering],
    buffer: [Function: buffer],
    flush: [Function: flush],
    createBufferedFunction: [Function: createBufferedFunction],
    on: [Function: on],
    off: [Function: off],
    removeAllListeners: [Function: removeAllListeners]
  },
  authState: {
    creds: {
      noiseKey: [Object],
      pairingEphemeralKeyPair: [Object],
      signedIdentityKey: [Object],
      signedPreKey: [Object],
      registrationId: 58,
      advSecretKey: 'kQtF/8owcWzxYDnv4+N8Zv3DAjICYOkozxPZncoCkvQ=',
      processedHistoryMessages: [Array],
      nextPreKeyId: 31,
      firstUnuploadedPreKeyId: 31,
      accountSyncCounter: 1,
      accountSettings: [Object],
      deviceId: '1MMppMlATPCGhSVNx9ynIA',
      phoneId: '9c363e4c-c719-4606-a334-aa7d2d919c2d',
      identityId: <Buffer a8 fc f9 6c 35 e2 6c 64 01 ac f1 99 49 ab 2b c6 eb 0e ff 7e>,
      registered: false,
      backupToken: <Buffer cb 5a 05 21 6f b9 a8 23 2f e4 9f 67 0c 1e 87 64 d3 93 b3 a2>,
      registration: {},
      account: [Object],
      me: [Object],
      signalIdentities: [Array],
      platform: 'android',
      routingInfo: <Buffer 08 05 08 0d>,
      lastAccountSyncTimestamp: 1726322757,
      myAppStateKeyId: 'AAAAAIsC',
      lastPropHash: '4eUNDn'
    },
    keys: {
      get: [AsyncFunction: get],
      set: [Function: set],
      isInTransaction: [Function: isInTransaction],
      transaction: [AsyncFunction: transaction]
    }
  },
  signalRepository: {
    decryptGroupMessage: [Function: decryptGroupMessage],
    processSenderKeyDistributionMessage: [AsyncFunction: processSenderKeyDistributionMessage],
    decryptMessage: [AsyncFunction: decryptMessage],
    encryptMessage: [AsyncFunction: encryptMessage],
    encryptGroupMessage: [AsyncFunction: encryptGroupMessage],
    injectE2ESession: [AsyncFunction: injectE2ESession],
    jidToSignalProtocolAddress: [Function: jidToSignalProtocolAddress]
  },
  user: {
    id: '905510310485:61@s.whatsapp.net',
    lid: '238821673308382:61@lid',
    name: 'Ic3zy'
  },
  generateMessageTag: [Function: generateMessageTag],
  query: [AsyncFunction: query],
  waitForMessage: [AsyncFunction: waitForMessage],
  waitForSocketOpen: [AsyncFunction: waitForSocketOpen],
  sendRawMessage: [AsyncFunction: sendRawMessage],
  sendNode: [Function: sendNode],
  logout: [AsyncFunction: logout],
  end: [Function: end],
  onUnexpectedError: [Function: onUnexpectedError],
  uploadPreKeys: [AsyncFunction: uploadPreKeys],
  uploadPreKeysToServerIfRequired: [AsyncFunction: uploadPreKeysToServerIfRequired],
  requestPairingCode: [AsyncFunction: requestPairingCode],
  waitForConnectionUpdate: [AsyncFunction (anonymous)],
  sendWAMBuffer: [Function: sendWAMBuffer],
  processingMutex: { mutex: [Function: mutex] },
  fetchPrivacySettings: [AsyncFunction: fetchPrivacySettings],
  upsertMessage: [AsyncFunction (anonymous)],
  appPatch: [AsyncFunction: appPatch],
  sendPresenceUpdate: [AsyncFunction: sendPresenceUpdate],
  presenceSubscribe: [Function: presenceSubscribe],
  profilePictureUrl: [AsyncFunction: profilePictureUrl],
  onWhatsApp: [AsyncFunction: onWhatsApp],
  fetchBlocklist: [AsyncFunction: fetchBlocklist],
  fetchStatus: [AsyncFunction: fetchStatus],
  updateProfilePicture: [AsyncFunction: updateProfilePicture],
  removeProfilePicture: [AsyncFunction: removeProfilePicture],
  updateProfileStatus: [AsyncFunction: updateProfileStatus],
  updateProfileName: [AsyncFunction: updateProfileName],
  updateBlockStatus: [AsyncFunction: updateBlockStatus],
  updateCallPrivacy: [AsyncFunction: updateCallPrivacy],
  updateLastSeenPrivacy: [AsyncFunction: updateLastSeenPrivacy],
  updateOnlinePrivacy: [AsyncFunction: updateOnlinePrivacy],
  updateProfilePicturePrivacy: [AsyncFunction: updateProfilePicturePrivacy],
  updateStatusPrivacy: [AsyncFunction: updateStatusPrivacy],
  updateReadReceiptsPrivacy: [AsyncFunction: updateReadReceiptsPrivacy],
  updateGroupsAddPrivacy: [AsyncFunction: updateGroupsAddPrivacy],
  updateDefaultDisappearingMode: [AsyncFunction: updateDefaultDisappearingMode],
  getBusinessProfile: [AsyncFunction: getBusinessProfile],
  resyncAppState: [AsyncFunction (anonymous)],
  chatModify: [Function: chatModify],
  cleanDirtyBits: [AsyncFunction: cleanDirtyBits],
  addChatLabel: [Function: addChatLabel],
  removeChatLabel: [Function: removeChatLabel],
  addMessageLabel: [Function: addMessageLabel],
  removeMessageLabel: [Function: removeMessageLabel],
  star: [Function: star],
  groupMetadata: [AsyncFunction: groupMetadata],
  groupCreate: [AsyncFunction: groupCreate],
  groupLeave: [AsyncFunction: groupLeave],
  groupUpdateSubject: [AsyncFunction: groupUpdateSubject],
  groupRequestParticipantsList: [AsyncFunction: groupRequestParticipantsList],
  groupRequestParticipantsUpdate: [AsyncFunction: groupRequestParticipantsUpdate],
  groupParticipantsUpdate: [AsyncFunction: groupParticipantsUpdate],
  groupUpdateDescription: [AsyncFunction: groupUpdateDescription],
  groupInviteCode: [AsyncFunction: groupInviteCode],
  groupRevokeInvite: [AsyncFunction: groupRevokeInvite],
  groupAcceptInvite: [AsyncFunction: groupAcceptInvite],
  groupRevokeInviteV4: [AsyncFunction: groupRevokeInviteV4],
  groupAcceptInviteV4: [AsyncFunction (anonymous)],
  groupGetInviteInfo: [AsyncFunction: groupGetInviteInfo],
  groupToggleEphemeral: [AsyncFunction: groupToggleEphemeral],
  groupSettingUpdate: [AsyncFunction: groupSettingUpdate],
  groupMemberAddMode: [AsyncFunction: groupMemberAddMode],
  groupJoinApprovalMode: [AsyncFunction: groupJoinApprovalMode],
  groupFetchAllParticipating: [AsyncFunction: groupFetchAllParticipating],
  getPrivacyTokens: [AsyncFunction: getPrivacyTokens],
  assertSessions: [AsyncFunction: assertSessions],
  relayMessage: [AsyncFunction: relayMessage],
  sendReceipt: [AsyncFunction: sendReceipt],
  sendReceipts: [AsyncFunction: sendReceipts],
  readMessages: [AsyncFunction: readMessages],
  refreshMediaConn: [AsyncFunction: refreshMediaConn],
  waUploadToServer: [AsyncFunction (anonymous)],
  sendPeerDataOperationMessage: [AsyncFunction: sendPeerDataOperationMessage],
  createParticipantNodes: [AsyncFunction: createParticipantNodes],
  getUSyncDevices: [AsyncFunction: getUSyncDevices],
  updateMediaMessage: [AsyncFunction: updateMediaMessage],
  sendMessage: [AsyncFunction: sendMessage],
  sendMessageAck: [AsyncFunction: sendMessageAck],
  sendRetryRequest: [AsyncFunction: sendRetryRequest],
  rejectCall: [AsyncFunction: rejectCall],
  fetchMessageHistory: [AsyncFunction: fetchMessageHistory],
  requestPlaceholderResend: [AsyncFunction: requestPlaceholderResend],
  logger: EventEmitter {
    trace: [Function: noop],
    debug: [Function: noop],
    info: [Function: LOG],
    warn: [Function: LOG],
    error: [Function: LOG],
    fatal: [Function (anonymous)],
    [Symbol(pino.serializers)]: { err: [Function: errSerializer] },
    [Symbol(pino.formatters)]: {
      level: [Function: level],
      bindings: [Function: resetChildingsFormatter],
      log: undefined
    },
    [Symbol(pino.chindings)]: ',"pid":4112,"hostname":"DESKTOP-7EJVK9J","class":"baileys"',
    [Symbol(pino.levelVal)]: 30
  },
  getOrderDetails: [AsyncFunction: getOrderDetails],
  getCatalog: [AsyncFunction: getCatalog],
  getCollections: [AsyncFunction: getCollections],
  productCreate: [AsyncFunction: productCreate],
  productDelete: [AsyncFunction: productDelete],
  productUpdate: [AsyncFunction: productUpdate],
  register: [AsyncFunction: register],
  requestRegistrationCode: [AsyncFunction: requestRegistrationCode]
}`